-- DROP TABLES
DROP TABLE IF EXISTS PUBLIC.FILM_GENRE;
DROP TABLE IF EXISTS PUBLIC.FRIENDS;
DROP TABLE IF EXISTS PUBLIC.FILMORATE_LIKE;
DROP TABLE IF EXISTS PUBLIC.REVIEW_LIKE;
DROP TABLE IF EXISTS PUBLIC.REVIEWS;
DROP TABLE IF EXISTS PUBLIC.FILM_DIRECTOR;
DROP TABLE IF EXISTS PUBLIC.GENRE;
DROP TABLE IF EXISTS PUBLIC.DIRECTOR;
DROP TABLE IF EXISTS PUBLIC.FILMORATE_USER;
DROP TABLE IF EXISTS PUBLIC.FILM;


--CREATE TABLES
CREATE TABLE IF NOT EXISTS PUBLIC.FILMORATE_USER (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL VARCHAR NOT NULL,
	LOGIN VARCHAR NOT NULL,
	NAME VARCHAR NOT NULL,
	BIRTHDAY DATE,
	CONSTRAINT FILMORATE_USER PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR NOT NULL,
	DESCRIPTION VARCHAR(200) NOT NULL,
	RELEASE_DATE DATE,
	DURATION SMALLINT,
	RATE TINYINT,
	MPA TINYINT,
	CONSTRAINT FILM_PK PRIMARY KEY (ID)
);

 CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.DIRECTOR (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR NOT NULL,
	CONSTRAINT DIRECTOR_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDS (
	USER_FROM INTEGER NOT NULL,
	USER_TO INTEGER NOT NULL,
	CONSTRAINT FRIENDS_PK PRIMARY KEY (USER_FROM, USER_TO),
	CONSTRAINT FRIENDS_USER_FROM_FK FOREIGN KEY (USER_FROM) REFERENCES PUBLIC.FILMORATE_USER(ID),
	CONSTRAINT FRIENDS_USER_TO_FK FOREIGN KEY (USER_TO) REFERENCES PUBLIC.FILMORATE_USER(ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRE (
	FILM_ID INTEGER NOT NULL,
    GENRE_ID INTEGER NOT NULL,
    CONSTRAINT FILM_GENRE_PK PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT FILM_GENRE_FILM_ID_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(ID),
    CONSTRAINT FILM_GENRE_GENRE_ID_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMORATE_LIKE (
	FILM_ID INTEGER NOT NULL,
    USER_ID INTEGER NOT NULL,
    CONSTRAINT FILMORATE_LIKE_PK PRIMARY KEY (FILM_ID, USER_ID),
    CONSTRAINT FILMORATE_LIKE_FILM_ID_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(ID),
    CONSTRAINT FILMORATE_LIKE_USER_ID_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.FILMORATE_USER(ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_DIRECTOR (
	FILM_ID INTEGER NOT NULL,
	DIRECTOR_ID INTEGER NOT NULL,
	CONSTRAINT FILM_DIRECTOR_PK PRIMARY KEY (FILM_ID, DIRECTOR_ID),
	CONSTRAINT FILM_DIRECTOR_FILM_ID_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(ID),
	CONSTRAINT FILM_DIRECTOR_DIRECTOR_ID_FK FOREIGN KEY (DIRECTOR_ID) REFERENCES PUBLIC.DIRECTOR(ID)
);
CREATE TABLE IF NOT EXISTS REVIEWS
(
	id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	content varchar,
	type    bool,
	user_id INTEGER REFERENCES FILMORATE_USER (id) ON DELETE CASCADE,
	film_id INTEGER REFERENCES FILM (id) ON DELETE CASCADE,
	rating  INTEGER DEFAULT 0
);
CREATE TABLE IF NOT EXISTS REVIEW_LIKE
(
	review_id INTEGER REFERENCES REVIEWS (id) ON DELETE CASCADE,
	user_id   INTEGER REFERENCES FILMORATE_USER (id) ON DELETE CASCADE,
	type varchar(10),
	PRIMARY KEY (review_id, user_id)
);